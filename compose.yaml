version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: amazon_clone
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    volumes:
      - ./db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d amazon_clone"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - app-network

  backend:
    build: ./backend
    volumes: # Mount the backend directory to the container (For development purposes)
      - ./backend:/app
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./backend/.env
    networks:
      - app-network

  frontend:
    build: ./frontend
    volumes: # Mount the frontend directory to the container (For development purposes)
      - ./frontend:/app
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app-network
  
  redis:
    image: redis:7.2
    ports:
      - "6379:6379"
    depends_on:
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
